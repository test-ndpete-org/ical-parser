machine:
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.1-circleci'
    - sudo chmod 0755 /usr/bin/docker
  timezone:
    America/Los_Angeles
  java:
    version: oraclejdk7
  services:
    - docker
  environment:
    REPO_NAME: ${CIRCLE_PROJECT_REPONAME}
    COMMIT_MESSAGE: "Code from $CIRCLE_BRANCH: $CIRCLE_SHA1"
    COMMIT_ID: ${CIRCLE_SHA1}
    CI_COMMIT_MESSAGE: "`git log --oneline -n 1 $CIRCLE_SHA1`"

dependencies:
  cache_directories:
    - "~/.m2/repository"
  pre:
    - docker version
    - docker login -e "$DOCKER_EMAIL" -u "$DOCKER_USER" -p "$DOCKER_PASS" quay.io
    - cp cicd/settings.xml ~/.m2/settings.xml
    - mvn install -U -Dmaven.test.skip=true
    - mvn help:evaluate -Dexpression=project.version
    - >
      mvn help:evaluate -Dexpression=project.version |grep -vE -e '^\[[A-Z]+\]\s+.*$' -e '^Download(ing|ed): ' >../project-version.txt
    - curl -Lo cicd/deployment.zip "https://github.com/byu-oit-appdev/aws-deployment-image/archive/nondocker.zip"
    - >
      cd cicd && chmod +x *.sh && unzip deployment.zip && cd aws-deployment-image-nondocker/scripts &&
      chmod +x *.py *.sh &&
      ls -1 *.py |cut -d . -f 1 |xargs -I {} ln -sf {}.py {} &&
      cd ../.. && mv aws-deployment-image-nondocker/scripts/* .
    - >
      virtualenv venv && source venv/bin/activate &&
      pip install --upgrade -r cicd/requirements.txt pyopenssl ndg-httpsclient pyasn1 && cd ..
    - aws --version
test:
  override:
    - ./cicd/validateAndBuild.sh "$CIRCLE_BRANCH"
  post:
    - >
      ./cicd/dockerize.sh "^" "$CIRCLE_SHA1" "$CIRCLE_BRANCH"
    - docker logout quay.io

deployment:
  production:
    branch: master
    commands:
      - echo "master"
#     - >
#       echo "[" >parameters.json &&
#       echo "{\"ParameterKey\": \"ImageName\", \"ParameterValue\": \"${CIRCLE_SHA1:0:16}\", \"UsePreviousValue\": false}," >>parameters.json &&
#       echo "{\"ParameterKey\": \"TomcatUsers\", \"ParameterValue\": \"$TOMCAT_USERS\", \"UsePreviousValue\": false}," >>parameters.json &&
#       echo "{\"ParameterKey\": \"AppProperties\", \"ParameterValue\": \"$APPLICATION_PROPERTIES\", \"UsePreviousValue\": false}" >>parameters.json &&
#       echo "]" >>parameters.json
      - >
       source venv/bin/activate && export PATH=$PWD/cicd:$PATH &&
       export AWS_ACCESS_KEY_ID=${AWS_PROD_KEY} && export AWS_SECRET_ACCESS_KEY=${AWS_PROD_SECRET} &&
       deployment_workflow.sh ical2json-ecs
       "ParameterKey=ImageName,ParameterValue=quay.io/byuoit/ical2json-rest:${CIRCLE_SHA1:0:16},UsePreviousValue=false"
       "ParameterKey=TomcatUsers,ParameterValue=${TOMCAT_USERS},UsePreviousValue=false"
       "ParameterKey=AppProperties,ParameterValue=${APPLICATION_PROPERTIES},UsePreviousValue=false"
#     - >
#       source venv/bin/activate && export PATH=$PWD/cicd:$PATH &&
#       export AWS_ACCESS_KEY_ID=${AWS_PROD_KEY} && export AWS_SECRET_ACCESS_KEY=${AWS_PROD_SECRET} && export AWS_DEFAULT_REGION=us-west-2 &&
#       aws cloudformation update-stack --stack-name ical2json-ecs --template-body file://cicd/cloudformation/ecsService.json
#       --parameters "ParameterKey=ImageTag,ParameterValue=${CIRCLE_SHA1:0:16},UsePreviousValue=false"


#        deployment_workflow.sh student-voting-api file:///repo/parameters.json

  stage:
    branch: dev
    commands:
      - echo "dev"
      - >
        docker run --rm -v $PWD:/repo
        -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_STG}
        -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_STG}
        -e AWS_DEFAULT_REGION=us-west-2
        -e TEMPLATE_FILE=/repo/cicd/cloudformation/ecsService-stg.json
        quay.io/byuoit/aws-deployment:master
        aws "cloudformation" "update-stack" "--stack-name" "student-voting-api"
        "--template-body" "file:///repo/cicd/cloudformation/ecsService-stg.json"
        "--parameters"
        "ParameterKey=ImageName,ParameterValue=quay.io/byuoit/ical2json-rest:${CIRCLE_SHA1:0:16},UsePreviousValue=false"
        "ParameterKey=TomcatUsers,ParameterValue=${TOMCAT_USERS},UsePreviousValue=false"
        "ParameterKey=AppProperties,ParameterValue=${LOCAL_PROPERTIES},UsePreviousValue=false"