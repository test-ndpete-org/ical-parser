machine:
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.1-circleci'
    - sudo chmod 0755 /usr/bin/docker
  timezone:
    America/Los_Angeles
  java:
    version: oraclejdk7
  services:
    - docker
  environment:
    REPO_NAME: ${CIRCLE_PROJECT_REPONAME}
    COMMIT_MESSAGE: "Code from $CIRCLE_BRANCH: $CIRCLE_SHA1"
    COMMIT_ID: ${CIRCLE_SHA1}
    CI_COMMIT_MESSAGE: "`git log --oneline -n 1 $CIRCLE_SHA1`"

checkout:
  post:
    - git submodule sync
    - git submodule update --init

dependencies:
  cache_directories:
    - "~/.m2/repository"
  pre:
    - docker version
    - docker login -e "$DOCKER_EMAIL" -u "$DOCKER_USER" -p "$DOCKER_PASS" quay.io
    - cp cicd/settings.xml ~/.m2/settings.xml
    - mvn install -U -Dmaven.test.skip=true
    - mvn help:evaluate -Dexpression=project.version
    - >
      mvn help:evaluate -Dexpression=project.version |grep -vE -e '^\[[A-Z]+\]\s+.*$' -e '^Download(ing|ed): ' >../project-version.txt
    - cd cicd && chmod +x *.sh && cd scripts && chmod +x *.py *.sh && cd ../..
    - >
      virtualenv venv && source venv/bin/activate &&
      pip install --upgrade -r cicd/scripts/requirements.txt pyopenssl ndg-httpsclient pyasn1
    - aws --version
test:
  override:
    - ./cicd/validateAndBuild.sh "$CIRCLE_BRANCH"
  post:
    - >
      ./cicd/dockerize.sh "^" "$CIRCLE_SHA1" "$CIRCLE_BRANCH"
    - docker logout quay.io

deployment:
  production:
    branch: master
    commands:
      - echo "master"
      - >
       source venv/bin/activate && export PATH=$PWD/cicd:$PATH &&
       export AWS_ACCESS_KEY_ID=${AWS_PROD_KEY} && export AWS_SECRET_ACCESS_KEY=${AWS_PROD_SECRET} &&
       ./cicd/scripts/deployment_workflow.sh ical2json-ecs
       "ParameterKey=ImageName,ParameterValue=quay.io/byuoit/ical2json-rest:${CIRCLE_SHA1:0:16},UsePreviousValue=false"
       "ParameterKey=TomcatUsers,ParameterValue=${TOMCAT_USERS},UsePreviousValue=false"
       "ParameterKey=AppProperties,ParameterValue=${APPLICATION_PROPERTIES},UsePreviousValue=false"

  stage:
    branch: stage
    commands:
      - echo "stage"
      - echo $PWD
      - cd /home/ubuntu/$CIRCLE_PROJECT_REPONAME/cicd/cloudformation
      - >
        source venv/bin/activate && export PATH=$PWD/cicd:$PATH &&
        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_STG} && export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_STG} &&
        aws "cloudformation" "update-stack" "--stack-name" "ical2json-ecs"
        "--template-body" "file:///ecsService-stg.json"
        "--parameters"
        "ParameterKey=ImageName,ParameterValue=quay.io/byuoit/ical2json-rest:${CIRCLE_SHA1:0:16},UsePreviousValue=false"
        "ParameterKey=TomcatUsers,ParameterValue=${TOMCAT_USERS},UsePreviousValue=false"
        "ParameterKey=AppProperties,ParameterValue=${LOCAL_PROPERTIES},UsePreviousValue=false"
      - >
        source venv/bin/activate && export PATH=$PWD/cicd:$PATH &&
        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_STG} && export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_STG} &&
        ./cicd/scripts/wait_for_cloudformation.py "ical2json-ecs"
      - >
        source venv/bin/activate && export PATH=$PWD/cicd:$PATH &&
        ./cicd/scripts/runscope_test.py "ical2json-ecs" "STG"